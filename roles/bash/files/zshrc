# Source shell file
if [ -f "$HOME/.terminal_profile" ]; then
  . "$HOME/.terminal_profile"
fi

# Git branch in terminal.
function git_branch_name() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

function git_remote_name() {
  git remote -v 2> /dev/null | head -1 | cut -f2 | cut -d' ' -f1 | rev | cut -d '/' -f1 | rev | cut -d'.' -f1
}

function k8s_current_context() {
  if [ -f "$HOME/.kube/config" ]; then
    CURRENT_CONTEXT=$(grep "current-context" "$HOME/.kube/config" | cut -d" " -f2)
    echo "[$CURRENT_CONTEXT]"
  fi
}

function git_all_in_one() {
  REMOTE=$(git remote -v 2> /dev/null | head -1 | cut -f2 | cut -d' ' -f1 | rev | cut -d '/' -f1 | rev | cut -d'.' -f1)
  BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
  if [ ! -z "$REMOTE" ]; then
    echo " ($REMOTE#$BRANCH)"
  fi
}

function directory_trim() {
  # echo "${PWD%/*}" | sed "s;$HOME;~;" | sed -e "s;\(/..\)[^/]*;\1;g" 
  # echo "${PWD%/*}" | sed "s;$HOME;~;" | rev | cut -d'/' -f-1-3 | rev 
  # pwd | sed "s;$HOME;~;" | rev | cut -d'/' -f1-3 | rev
  pwd | sed "s;$HOME;~;" | sed "s;storable;st;" | sed "s;devops;do;" | sed "s;infrastructure;infra;" | sed "s;terraform;tf;" | sed "s;development;dvl;" | sed "s;staging;stg;" | sed "s;production;prd;"
}

# Add color to Terminal:
autoload -U colors && colors
setopt PROMPT_SUBST
# PS1="%{$fg[green]%}%n%{$reset_color%} %{$fg[white]%}(\$(date +"%T"))%{$reset_color%} %{$fg[blue]%}[\$(directory_trim)]%{$reset_color%}%{$fg[yellow]%}\$(git_branch_name)%{$reset_color%} %{$fg[magenta]%}\$(k8s_current_context)%{$reset_color%}
# %% "
PS1="%{$fg[blue]%}[\$(directory_trim)]%{$reset_color%} %{$fg[white]%}(\$(date +"%T"))%{$reset_color%}%{$fg[yellow]%}\$(git_branch_name)%{$reset_color%} %{$fg[magenta]%}\$(k8s_current_context)%{$reset_color%}
%% "
