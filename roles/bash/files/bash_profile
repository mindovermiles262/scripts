# File Location: ~/.bash_profile
# Run the following to download and initialize:
# curl -o ~/.bash_profile https://raw.githubusercontent.com/mindovermiles262/scripts/master/bash/bash_profile && source ~/.bash_profile

BASH_PROFILE_URL="https://raw.githubusercontent.com/mindovermiles262/scripts/master/bash/bash_profile"


# Load settings from .bashrc
[[ -r ~/.bashrc ]] && . ~/.bashrc
# source ~/Documents/bash-command-timer/bash_command_timer.sh

if [ -d "$HOME/.phpbrew" ]; then
  source /Users/aduss/.phpbrew/bashrc
  export PHPBREW_SET_PROMPT=1
  export PHPBREW_RC_ENABLE=1
fi

# OS Specific Commands
if [[ "$OSTYPE" == 'linux'* ]]; then
  alias open="xdg-open"
elif [[ "$OSTYPE" =~ "darwin" ]]; then
  export CLICOLOR=1
  export LSCOLORS=GxFxCxDxBxegedabagaced
  alias unmount="diskutil unmountDisk $1"
  alias eject="diskutil unmountDisk $1"
  export BASH_SILENCE_DEPRECATION_WARNING=1
fi

# Add color to Terminal:
# export PS1='\[\033[32m\]$(hostname_displ) \[\033[34m\][\W]\[\033[33m\]$(parse_git_branch)\[\033[00m\]\$ '
export PS1='\[\033[32m\]\u \[\033[34m\][\w]\[\033[33m\]$(parse_git_branch)\[\033[00m\]\n\$\[\033[8m\]â€¢\[\033[00m\]'

# Get first 4 letters of hostname and upcase
hostname_displ() {
  # HOST="$(hostname | head -c 4)"
  HOST="$(hostname)"
  # echo $HOST | tr '[:lower:]' '[:upper:]'
  echo $HOST | tr '[:upper:]' '[:lower:]'
}

# Git branch in terminal.
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

###########
# Aliases #
###########

# File Aliases
if [[ "$OSTYPE" == 'linux'* ]]; then
  alias l="/bin/ls -lh --color"
  alias ls="/bin/ls -h --color"
  alias ll="/bin/ls -lha --color"
  alias la="/bin/ls -ha --color"
else
  alias l="/bin/ls -lhG"
  alias ls="/bin/ls -hG"
  alias ll="/bin/ls -lhaG"
  alias la="/bin/ls -haG"
fi

# Work
alias st="cd /opt/storable && ls -lGh"
alias std="cd /opt/storable/devops && ls -lGh"
alias stm="cd /opt/storable/sparefoot && ls -lGh"
alias sts="cd /opt/storable/services && ls -lGh"
# alias sf="cd /opt/sparefoot && ls -lGh"
# alias sfd="cd /opt/sparefoot/devops && ls -lGh"
alias cstd="code /opt/storable/devops/."
alias cstm="code /opt/storable/sparefoot/."

# DevOps Tool Aliases
alias tf="terraform $@"
alias tplan="terraform plan -out out.plan $@"
alias mk="minikube $@"
alias dc="docker-compose $@"

# Python Aliases
alias py="python3 $@"

# Git Aliases
alias gss="git status"
alias gaa="git add ."
alias gcc="git commit -m $1"
alias gpo="git push origin $@"

# C++ Aliases
alias cpp="g++ -std=c++0x $1"

# DotNET Aliases
alias dn="dotnet $@"

# Random Aliases
alias cip="curl https://andyduss.com/ip"
alias lip="ifconfig | grep 'inet '"
alias \:q="exit"
alias c="cd .."
alias dk="docker $1"
alias tf="terraform $1"
alias tg="terragrunt $1"
alias mk="minikube $1"
alias ta="tmux attach -t $1"
alias tls="tmux ls"
alias gc="gcloud $1"
alias vpn="expressvpn $@"
alias kcc="kubectl config current-context"
alias kls="kubectl config get-contexts"
alias kuc="kubectl config use-context $1"

ks() {
  if [[ -f "/snap/bin/microk8s" ]]; then
    microk8s.kubectl "$@"
  else
    kubectl "$@"
  fi
}
export KUBE_EDITOR=vim

tada() {
  # Check if tmux is installed
  if [[ ! -f "/usr/local/bin/tmux" && ! -f "/usr/bin/tmux" ]]; then
    echo "Tmux not found.. exiting..."
    return 1
  fi

  tmux ls | grep -q dflt
  CPE_EXITCODE=$?
  if [[ "$CPE_EXITCODE" -eq 0 ]]; then
    # 0 => Session is running, attach to existing session
    echo "Attaching to 'dflt' session . . ."
    tmux attach -t dflt
  else
    # 1 => Session does not exist, create new session
    echo "Creating new tmux session, 'dflt' . . ."
    tmux new -s dflt
  fi
}

# Add asdf to PATH
if [ -d "$HOME/.asdf" ]; then
  . $HOME/.asdf/asdf.sh
  . $HOME/.asdf/completions/asdf.bash
fi

# Add pyenv to PATH
if [ -d "$HOME/.pyenv" ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

# Add rbenv to PATH
if [ -d "$HOME/.rbenv" ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi

# Add golang to PATH
if [ -d "/usr/local/go" ]; then
  export PATH="$PATH:/usr/local/go/bin"
fi

# if [ -d "$HOME/.phpenv" ]; then
#   export PATH="/usr/local/opt/bison/bin:$PATH"
#   export PHPENV_ROOT="$HOME/.phpenv"
#   export PATH="$PHPENV_ROOT/bin:$PATH"
#   eval "$(phpenv init -)"
#   export PHPENV_CONFIG="--with-zlib-dir=$(brew --prefix zlib) --with-bz2=$(brew --prefix bzip2) --with-curl=$(brew --prefix curl) --with-iconv=$(brew --prefix libiconv) --with-libedit=$(brew --prefix libedit) --with-readline=$(brew --prefix readline) --with-tidy=$(brew --prefix tidy-html5)"
# fi

# Add Istio to PATH
if [ -d "$HOME/Applications/istio" ]; then
  export PATH="$PATH:$HOME/Applications/istio/bin"
fi

# Add gcloud to PATH
if [ -d "$HOME/Applications/google-cloud-sdk" ]; then
  export PATH="$PATH:$HOME/Applications/google-cloud-sdk/bin"
fi

if [ -d "$HOME/Applications/neovim" ]; then
  export PATH="$PATH:$HOME/Applications/neovim/bin"
fi
