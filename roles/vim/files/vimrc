syntax on

" Install vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
  \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')
  Plug 'airblade/vim-gitgutter'
  Plug 'ctrlpvim/ctrlp.vim'
  " Plug 'fatih/vim-go'
  " Plug 'hashivim/vim-terraform'
  Plug 'kien/ctrlp.vim'
  Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'mattn/emmet-vim'
  Plug 'preservim/nerdtree'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-endwise'
  Plug 'tpope/vim-surround'
  " Plug 'vim-syntastic/syntastic'
  Plug 'dense-analysis/ale'
  " Plug 'vim-airline/vim-airline'
  Plug 'sheerun/vim-polyglot'
call plug#end()

" Use Terminal Colors
set termguicolors

" set autoindent
set number
set numberwidth=2

" Set Ruler
set colorcolumn=79,119
highlight ColorColumn guibg=#000

set showcmd
set showmode
set backspace=indent,eol,start
set nowrap

" Key remapping
:imap jj <Esc>
:map :qq :q!

" Set TAB to 2 Spaces
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set smarttab
set autoindent
set smartindent

" Autoclose brackets
inoremap (<CR> (<CR>)<C-c>O<TAB>
inoremap {<CR> {<CR>}<C-c>O<TAB>
inoremap [<CR> [<CR>]<C-c>O<TAB>
inoremap (;<CR> (<CR>);<C-c>O<TAB>
inoremap {;<CR> {<CR>};<C-c>O<TAB>
inoremap [;<CR> [<CR>];<C-c>O<TAB>

" Syntastic Linter Settings
" https://github.com/vim-syntastic/syntastic
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_go_checkers = ["go"]
let g:syntastic_javascript_checkers = ["eslint"]
let g:syntastic_javascript_eslint_exe='$(npm bin)/eslint'
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_ruby_checkers = ['rubocop']
" Use '\sc' to check syntax
nmap <leader>sc :SyntasticCheck<CR> 
nmap <leader>si :SyntasticInfo<CR>

" Avro Schema (.avsc) files are JSON
autocmd BufRead,BufNewFile *.avsc setlocal filetype=json

" Golang
let g:go_def_mode="gopls"
let g:go_info_mode="gopls"

" Emmet Vim
" let g:user_emmet_expandabbr_key='<C-e>'
let g:user_emmet_leader_key='<C-e>'

" vim-terraform
let g:terraform_fmt_on_save=1

" NerdTree Stuff
" show hidden files by default, 'I' to toggle
let NERDTreeShowHidden=1
" Ignore these types of files
set wildignore+=*.pyc,*.o,*.obj,*.svn,*.swp,*.class,*.hg,*.DS_Store,*.min.*,.git
" Nerdtree config for wildignore
let NERDTreeRespectWildIgnore=1

" Use '\sp' '\snp' to :set [no] paste
nmap <leader>sp :set paste<CR>
nmap <leader>snp :set nopaste<CR>

" Ale settings
let g:ale_fix_on_save = 1
highlight ALEWarning guibg=DarkYellow
highlight ALEError guibg=DarkRed

" Use ctrl-[hjkl] to select the active split!
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>
