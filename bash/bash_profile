# File Location: ~/.bash_profile
# Run the following to download and initialize:
# curl -o ~/.bash_profile https://raw.githubusercontent.com/mindovermiles262/scripts/master/bash/bash_profile && source ~/.bash_profile

BASH_PROFILE_URL="https://raw.githubusercontent.com/mindovermiles262/scripts/master/bash/bash_profile"
VIM_RC_URL="https://raw.githubusercontent.com/mindovermiles262/scripts/master/vim/vimrc"


# Load settings from .bashrc
[[ -r ~/.bashrc ]] && . ~/.bashrc


# OS Specific Commands
if [[ "$OSTYPE" == 'linux'* ]]; then
  alias linux-upgrade="sudo apt-get update \
    && sudo apt-get -y upgrade \
    && sudo apt-get -y dist-upgrade \
    && printf 'Linux Has Been Updated\n  {apt-get update}\n  {apt-get upgrade}\n  {apt-get dist-upgrade}\n'"
  alias open="xdg-open"
elif [[ "$OSTYPE" =~ "darwin" ]]; then
  export CLICOLOR=1
  export LSCOLORS=GxFxCxDxBxegedabagaced
  alias unmount="diskutil unmountDisk $1"
  alias eject="diskutil unmountDisk $1"
fi

# Add color to Terminal:
export PS1='\[\033[32m\]$(hostname_displ) \[\033[34m\][\W]\[\033[33m\]$(parse_git_branch)\[\033[00m\]\$ '

# Get first 4 letters of hostname and upcase
hostname_displ() {
  HOST="$(hostname | head -c 4)"
  # echo $HOST | tr '[:lower:]' '[:upper:]'
  echo $HOST | tr '[:upper:]' '[:lower:]'
}

# Git branch in terminal.
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

###########
# Aliases #
###########

# File Aliases
alias ll="ls -lha --color=auto"
alias la="ls -lha --color=auto"
alias l="ls -lh --color=auto"
alias ls="ls -lh --color=auto"

# Add Rails Aliases
# alias reset="rails db:migrate:reset; rails db:seed"
# alias migrate="rails db:migrate"
# alias seed="rails db:seed"

# Python Aliases
# alias py="python3"

# Git Aliases
alias gss="git status"
alias gaa="git add ."
alias gcc="git commit -m $1"

# Download VIM-Plug and initialize in ~/.vim/autoload, then download .vimrc
alias vim-init="printf 'Downloading Plug\n' \
  && curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim \
  && curl -o ~/.vimrc $VIM_RC_URL"

# C++ Aliases
alias cpp="g++ -std=c++0x $1"

# Random Aliases
alias vim-update="curl -o ~/.vimrc $VIM_RC_URL"
alias bash-update="curl -o ~/.bash_profile $BASH_PROFILE_URL && source ~/.bash_profile"
alias cip="curl https://andyduss.com/ip"
alias lip="ifconfig | grep 'inet '"
alias \:q="exit"
alias c="cd .."
alias dk="docker $1"
alias ks="kubectl $1"
alias tf="terraform $1"
alias tg="terragrunt $1"
alias mk="minikube $1"
alias ta="tmux attach -t $1"
alias tls="tmux ls"
alias gc="gcloud $1"

tada() {
  # Check if tmux is installed
  if [[ ! -f "/usr/local/bin/tmux" ]]; then
    return 1
  fi

  tmux ls | grep -q dflt
  CPE_EXITCODE=$?
  if [[ "$CPE_EXITCODE" -eq 0 ]]; then
    # 0 => Session is running, attach to existing session
    echo "Attaching to 'dflt' session . . ."
    tmux attach -t dflt
  else
    # 1 => Session does not exist, create new session
    echo "Creating new tmux session, 'dflt' . . ."
    tmux new -s dflt
  fi
}

# Add asdf to PATH
if [ -d "$HOME/.asdf" ]; then
  . $HOME/.asdf/asdf.sh
  . $HOME/.asdf/completions/asdf.bash
fi

# Add pyenv to PATH
# if [ -d "$HOME/.pyenv" ]; then
#   export PYENV_ROOT="$HOME/.pyenv"
#   export PATH="$PYENV_ROOT/bin:$PATH"
#   eval "$(pyenv init -)"
# fi

# Add rbenv to PATH
# if [ -d "$HOME/.rbenv" ]; then
#   export PATH="$HOME/.rbenv/bin:$PATH"
#   eval "$(rbenv init -)"
# fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/dipsea/Applications/google-cloud-sdk/path.bash.inc' ]; then 
  . '/Users/dipsea/Applications/google-cloud-sdk/path.bash.inc'; 
fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/dipsea/Applications/google-cloud-sdk/completion.bash.inc' ]; then 
  . '/Users/dipsea/Applications/google-cloud-sdk/completion.bash.inc'; 
fi

# Set Java Version: `jdk 10` => Sets Java java10
# https://github.com/AdoptOpenJDK/homebrew-openjdk
jdk() {
  if [ $1 == "list" ]; then
    "$(/usr/libexec/java_home -V)"
  else
    version=$1
    export JAVA_HOME=$(/usr/libexec/java_home -v"$version");
    java -version
  fi
}

