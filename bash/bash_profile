# File Location: ~/.bash_profile
# Run the following to download and initialize:
# curl -o ~/.bash_profile https://raw.githubusercontent.com/mindovermiles262/scripts/master/bash/bash_profile && source ~/.bash_profile

BASH_PROFILE_URL="https://raw.githubusercontent.com/mindovermiles262/scripts/master/bash/bash_profile"
VIM_RC_URL="https://raw.githubusercontent.com/mindovermiles262/scripts/master/vim/vimrc"


# Load settings from .bashrc
[[ -r ~/.bashrc ]] && . ~/.bashrc


# OS Specific Commands
if [[ "$OSTYPE" == 'linux'* ]]; then
  alias linux-upgrade="sudo apt-get update \
    && sudo apt-get -y upgrade \
    && sudo apt-get -y dist-upgrade \
    && printf 'Linux Has Been Updated\n  {apt-get update}\n  {apt-get upgrade}\n  {apt-get dist-upgrade}\n'"
  alias open="xdg-open"
elif [[ "$OSTYPE" =~ "darwin" ]]; then
  export CLICOLOR=1
  export LSCOLORS=GxFxCxDxBxegedabagaced
fi

# Add color to Terminal:
# export PS1="\W\[\033[32m\]\$(parse_git_branch)\[\033[00m\] $ "
if [ "$(hostname)" == "vultr.guest" ]; then
  export PS1='\[\033[01;34m\][vultr \W]\[\033[01;33m\]$(parse_git_branch)\[\033[00m\]\$ '
else
  export PS1='\[\033[01;34m\][\W]\[\033[01;33m\]$(parse_git_branch)\[\033[00m\]\$ '
fi

# Git branch in terminal.
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

###########
# Aliases #
###########

# File Aliases
alias ll="ls -lha"
alias la="ls -lha"
alias l="ls -lh"

# Add Rails Aliases
alias reset="rails db:migrate:reset; rails db:seed"
alias migrate="rails db:migrate"
alias seed="rails db:seed"

# Python Aliases
alias py="python3"

# Git Aliases
alias gss="git status"
alias gaa="git add ."
alias gcc="git commit -m $1"

# Download VIM-Plug and initialize in ~/.vim/autoload, then download .vimrc
alias vim-init="printf 'Downloading Plug\n' \
  && curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim \
  && curl -o ~/.vimrc $VIM_RC_URL"

# Random Aliases
alias vim-update="curl -o ~/.vimrc $VIM_RC_URL"
alias bash-update="curl -o ~/.bash_profile $BASH_PROFILE_URL && source ~/.bash_profile"
alias nord-init="wget -O ~/Documents/nord_ovpn.zip https://downloads.nordcdn.com/configs/archives/servers/ovpn.zip"
alias cip="curl https://andyduss.com/ip"
alias lip="ifconfig | grep 'inet '"
alias \:q="exit"
alias c="cd .."
alias tf="terraform $1"

# SMH Docker
dog() {
  docker exec -it "$1" /bin/sh
}
dvol() {
  screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty
}

# Tmux Aliases
alias ta="tmux attach -t $1"
alias tn="tmux new -s $1"
alias tls="tmux ls"

tada() {
  # Check if tmux is installed
  if [[ ! -f "/usr/local/bin/tmux" ]]; then
    return 1
  fi

  tmux ls | grep -q cpe
  CPE_EXITCODE=$?
  if [[ "$CPE_EXITCODE" -eq 0 ]]; then
    # 0 => Session is running, attach to existing session
    echo "Attaching to 'cpe' session . . ."
    tmux attach -t cpe
  else
    # 1 => Session does not exist, create new session
    echo "Creating new tmux session, 'cpe' . . ."
    tmux new -s cpe
  fi
}

# Work Aliases
alias mcc="makecatalogs ~/code/cpe_munki"
alias auth="ssh-add -K ~/.ssh/id_rsa && hologram use iteng"
ldapp() {
  ldapsearch -xLLL -H ldaps://ldap.pinadmin.com -b dc=pinterest,dc=com uid=$1;
}
alias unmount="diskutil unmountDisk $1"
alias eject="diskutil unmountDisk $1"

# AWS CLI Alises
awsls() { aws s3 ls s3://$1; }
awscp() { aws s3 cp s3://$1 $2; }

# Neovim
alias vin="nvim"

# Add asdf to PATH
if [ -d "$HOME/.asdf" ]; then
  . $HOME/.asdf/asdf.sh
  . $HOME/.asdf/completions/asdf.bash
fi

# Add pyenv to PATH
if [ -d "$HOME/.pyenv" ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

# Add rbenv to PATH
if [ -d "$HOME/.rbenv" ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/aduss/Downloads/google-cloud-sdk/path.bash.inc' ]; then 
  . '/Users/aduss/Downloads/google-cloud-sdk/path.bash.inc'; 
fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/aduss/Downloads/google-cloud-sdk/completion.bash.inc' ]; 
  then . '/Users/aduss/Downloads/google-cloud-sdk/completion.bash.inc'; 
fi

# Add GOPATH to PATH
# if [[ -d "$(go env GOPATH)" ]]; then
#   export PATH=$PATH:"$(go env GOPATH)/bin"
# fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/dipsea/Downloads/google-cloud-sdk/path.bash.inc' ]; then . '/Users/dipsea/Downloads/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/dipsea/Downloads/google-cloud-sdk/completion.bash.inc' ]; then . '/Users/dipsea/Downloads/google-cloud-sdk/completion.bash.inc'; fi
